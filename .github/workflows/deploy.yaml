name: Dicom Viewer Deployment

permissions:
  id-token: write
  contents: read
  pull-requests: write

on:
  workflow_call:
    inputs:
      environment:
        type: string
        required: true

jobs:
  Higher-Env-Notification:
    if: contains('prod preprod', inputs.environment)
    name: Notify team on deployment to higher environments
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install

      - name: Notify Teams Chat
        run: |
          yarn notify:teams '${{ secrets.TECH_TEAM_CHAT }}' '⌛️${{ github.actor }} has just triggered App deployment to ${{ inputs.environment }}.'

  unit-tests:
    name: Run unit tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install

      - name: Run unit tests
        run: yarn test:unit

  build-and-deploy-viewer:
    name: Build and Deploy Viewer
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    needs: [unit-tests]

    env:
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      SSE_KEY_ID: ${{ vars.SSE_KEY_ID }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'yarn'

      - name: Load environment config
        run: cat configs/.env.${{ inputs.environment }} >> $GITHUB_ENV

      - name: Install dependencies
        run: yarn install

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: 'eu-west-2'
          role-to-assume:
            'arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ secrets.AWS_DEPLOY_ROLE_NAME }}'

      - name: Build application
        run: yarn build

      - name: Upload App to S3
        working-directory: platform/app/dist
        run:
          aws s3 sync . s3://$APPDEPLOY_BUCKET_NAME --sse aws:kms --sse-kms-key-id ${{
          vars.SSE_KEY_ID }}

  share-deployment-details:
    name: Share Deployment Details
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    needs: [unit-tests, build-and-deploy-viewer]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install

      - name: Notify Teams Chat(Dev and QAT)
        if: contains('dev qat', inputs.environment)
        run: |
          yarn notify:teams '${{ secrets.APP_DEPLOYMENT_NOTIFICATION_CHAT }}' 'OHIF Viewer: ${{ github.ref_name }} has been deployed to ${{ inputs.environment }}'

      - name: Notify Teams Chat(Preprod and Prod)
        if: contains('prod preprod', inputs.environment)
        run: |
          yarn notify:teams '${{ secrets.TECH_TEAM_CHAT }}' 'OHIF Viewer: 🚀 App deployment to ${{ inputs.environment }} ran successfully'

      - name: Get Pull Request Number
        id: get_pr
        run: |
          PR_NUMBER=$(gh pr list --head '${{ github.ref_name }}' --state open --json number --jq '.[0].number')
          echo "PR_NUMBER=$PR_NUMBER" >> $GITHUB_ENV
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Deployment details
        uses: actions/github-script@v7
        if: env.PR_NUMBER != ''
        with:
          script: |
            github.rest.issues.createComment({
            issue_number: ${{ env.PR_NUMBER }},
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `🚀 Pull Request ${{ env.PR_NUMBER }} deployed to ${{ inputs.environment }}`
            })
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
